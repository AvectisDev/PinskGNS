version: '3.8'

services:
  postgres:
    image: postgres:17-alpine
    container_name: postgres
    restart: unless-stopped
    env_file:
      - ./.env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - app_network

  adminer:
      image: adminer
      container_name: adminer
      restart: always
      ports:
        - 8005:8080
      networks:
        - app_network

  django_backend:
    build: .
    container_name: django
    command: daphne -p 8000 GNS.asgi:application --bind 0.0.0.0
    restart: always
    ports:
      - 8000:8000
    env_file:
      - ./.env
    depends_on:
      - postgres
      - redis
    environment:
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      REDIS_URL: redis://redis:6379/0
    networks:
      - app_network

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    networks:
      - app_network

  celery:
    build: .
    container_name: celery
    command: celery -A GNS worker --loglevel=info
    restart: always
    env_file:
      - ./.env
    depends_on:
      - redis
      - postgres
    environment:
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      REDIS_URL: redis://redis:6379/0
    networks:
      - app_network

  celery_beat:
    build: .
    container_name: celery_beat
    command: celery -A GNS beat --loglevel=info
    restart: always
    env_file:
      - ./.env
    depends_on:
      - redis
      - postgres
      - celery
    environment:
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      REDIS_URL: redis://redis:6379/0
    networks:
      - app_network

  rfid:
    build: ../rfid app
    container_name: rfid
    restart: always
    ports:
      - 8002:8002
    env_file:
      - ./.env
    depends_on:
      - postgres
    environment:
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
    networks:
      - app_network

volumes:
  postgres_data:

networks:
    app_network:
        name: 'app_network'
        driver: bridge