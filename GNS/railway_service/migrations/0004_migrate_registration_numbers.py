# Generated by Django 5.2.4 on 2025-09-16 20:54

from django.db import migrations
from django.db.models import Count


def migrate_registration_numbers(apps, schema_editor):
    """
    Миграция данных: конвертируем registration_number в int и удаляем дубликаты
    """
    RailwayTank = apps.get_model('railway_service', 'RailwayTank')
    
    # Находим дубликаты по registration_number
    duplicates = RailwayTank.objects.values('registration_number').annotate(
        count=Count('id')
    ).filter(count__gt=1)
    
    print(f"Найдено {len(duplicates)} групп дубликатов")
    
    for dup in duplicates:
        reg_num = dup['registration_number']
        print(f"Обрабатываем дубликаты для номера: {reg_num}")
        
        # Получаем все записи с этим номером
        tanks = RailwayTank.objects.filter(registration_number=reg_num).order_by('id')
        
        # Оставляем первую запись, остальные удаляем
        keep_tank = tanks.first()
        delete_tanks = tanks[1:]
        
        print(f"  Оставляем запись ID {keep_tank.id}, удаляем {len(delete_tanks)} дубликатов")
        
        # Удаляем дубликаты
        for tank in delete_tanks:
            tank.delete()
    
    # Конвертируем registration_number в int
    for tank in RailwayTank.objects.all():
        try:
            # Пробуем конвертировать в int
            reg_num_int = int(tank.registration_number)
            tank.registration_number_int = reg_num_int
            tank.save()
            print(f"Конвертирован номер {tank.registration_number} -> {reg_num_int}")
        except (ValueError, TypeError):
            print(f"ОШИБКА: Не удалось конвертировать номер '{tank.registration_number}' в int")
            # Можно установить дефолтное значение или пропустить
            continue


def reverse_migrate_registration_numbers(apps, schema_editor):
    """
    Обратная миграция: очищаем registration_number_int
    """
    RailwayTank = apps.get_model('railway_service', 'RailwayTank')
    RailwayTank.objects.all().update(registration_number_int=None)


class Migration(migrations.Migration):

    dependencies = [
        ('railway_service', '0003_add_registration_number_int'),
    ]

    operations = [
        migrations.RunPython(migrate_registration_numbers, reverse_migrate_registration_numbers),
    ]
