# Generated by Django 5.1.4 on 2025-05-14 21:46

import pgtrigger.compiler
import pgtrigger.migrations
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('filling_station', '0068_remove_railwaytank_user_delete_railwaybatch_and_more'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='balloon',
            options={'ordering': ['-change_date'], 'verbose_name': 'Баллон', 'verbose_name_plural': 'Баллоны'},
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='balloon',
            name='insert_insert',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='balloon',
            name='update_update',
        ),
        migrations.RemoveIndex(
            model_name='balloon',
            name='filling_sta_nfc_tag_4ffc6b_idx',
        ),
        migrations.RemoveField(
            model_name='balloon',
            name='change_time',
        ),
        migrations.RemoveField(
            model_name='balloon',
            name='id',
        ),
        migrations.RemoveField(
            model_name='balloonevent',
            name='id',
        ),
        migrations.AddField(
            model_name='balloonevent',
            name='change_date',
            field=models.DateTimeField(auto_now=True, verbose_name='Дата изменений'),
        ),
        migrations.AlterField(
            model_name='balloon',
            name='change_date',
            field=models.DateTimeField(auto_now=True, verbose_name='Дата изменений'),
        ),
        migrations.AlterField(
            model_name='balloon',
            name='nfc_tag',
            field=models.CharField(db_index=True, default=' ', max_length=30, primary_key=True, serialize=False, verbose_name='Номер метки'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='balloon',
            name='serial_number',
            field=models.CharField(blank=True, db_index=True, max_length=30, null=True, verbose_name='Серийный номер'),
        ),
        migrations.AlterField(
            model_name='balloonevent',
            name='nfc_tag',
            field=models.CharField(default=' ', max_length=30, serialize=False, verbose_name='Номер метки'),
            preserve_default=False,
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='balloon',
            trigger=pgtrigger.compiler.Trigger(name='insert_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "filling_station_balloonevent" ("brutto", "change_date", "creation_date", "current_examination_date", "diagnostic_date", "manufacturer", "netto", "next_examination_date", "nfc_tag", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "serial_number", "size", "status", "user_id", "wall_thickness", "working_pressure") VALUES (NEW."brutto", NEW."change_date", NEW."creation_date", NEW."current_examination_date", NEW."diagnostic_date", NEW."manufacturer", NEW."netto", NEW."next_examination_date", NEW."nfc_tag", _pgh_attach_context(), NOW(), \'insert\', NEW."nfc_tag", NEW."serial_number", NEW."size", NEW."status", NEW."user_id", NEW."wall_thickness", NEW."working_pressure"); RETURN NULL;', hash='84284ba2a0647d53e0ab6a4ece70203db84f392a', operation='INSERT', pgid='pgtrigger_insert_insert_703b2', table='filling_station_balloon', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='balloon',
            trigger=pgtrigger.compiler.Trigger(name='update_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD."brutto" IS DISTINCT FROM (NEW."brutto") OR OLD."change_date" IS DISTINCT FROM (NEW."change_date") OR OLD."creation_date" IS DISTINCT FROM (NEW."creation_date") OR OLD."current_examination_date" IS DISTINCT FROM (NEW."current_examination_date") OR OLD."diagnostic_date" IS DISTINCT FROM (NEW."diagnostic_date") OR OLD."manufacturer" IS DISTINCT FROM (NEW."manufacturer") OR OLD."netto" IS DISTINCT FROM (NEW."netto") OR OLD."next_examination_date" IS DISTINCT FROM (NEW."next_examination_date") OR OLD."nfc_tag" IS DISTINCT FROM (NEW."nfc_tag") OR OLD."serial_number" IS DISTINCT FROM (NEW."serial_number") OR OLD."size" IS DISTINCT FROM (NEW."size") OR OLD."status" IS DISTINCT FROM (NEW."status") OR OLD."user_id" IS DISTINCT FROM (NEW."user_id") OR OLD."wall_thickness" IS DISTINCT FROM (NEW."wall_thickness") OR OLD."working_pressure" IS DISTINCT FROM (NEW."working_pressure"))', func='INSERT INTO "filling_station_balloonevent" ("brutto", "change_date", "creation_date", "current_examination_date", "diagnostic_date", "manufacturer", "netto", "next_examination_date", "nfc_tag", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "serial_number", "size", "status", "user_id", "wall_thickness", "working_pressure") VALUES (NEW."brutto", NEW."change_date", NEW."creation_date", NEW."current_examination_date", NEW."diagnostic_date", NEW."manufacturer", NEW."netto", NEW."next_examination_date", NEW."nfc_tag", _pgh_attach_context(), NOW(), \'update\', NEW."nfc_tag", NEW."serial_number", NEW."size", NEW."status", NEW."user_id", NEW."wall_thickness", NEW."working_pressure"); RETURN NULL;', hash='73bef74933b57e3ce383d413e93726c3855ef831', operation='UPDATE', pgid='pgtrigger_update_update_08342', table='filling_station_balloon', when='AFTER')),
        ),
    ]
