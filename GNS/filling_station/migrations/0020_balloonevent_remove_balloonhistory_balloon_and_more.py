# Generated by Django 5.0.6 on 2024-08-27 20:24

import django.db.models.deletion
import pgtrigger.compiler
import pgtrigger.migrations
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('filling_station', '0019_alter_balloon_options_alter_balloonhistory_options_and_more'),
        ('pghistory', '0006_delete_aggregateevent'),
    ]

    operations = [
        migrations.CreateModel(
            name='BalloonEvent',
            fields=[
                ('pgh_id', models.AutoField(primary_key=True, serialize=False)),
                ('pgh_created_at', models.DateTimeField(auto_now_add=True)),
                ('pgh_label', models.TextField(help_text='The event label.')),
                ('id', models.BigIntegerField()),
                ('nfc_tag', models.CharField(max_length=30, verbose_name='Номер метки')),
                ('serial_number', models.CharField(blank=True, max_length=30, null=True, verbose_name='Серийный номер')),
                ('creation_date', models.DateField(blank=True, null=True, verbose_name='Дата производства')),
                ('size', models.FloatField(blank=True, null=True, verbose_name='Объём')),
                ('netto', models.FloatField(blank=True, null=True, verbose_name='Вес пустого баллона')),
                ('brutto', models.FloatField(blank=True, null=True, verbose_name='Вес наполненного баллона')),
                ('current_examination_date', models.DateField(blank=True, null=True, verbose_name='Дата освидетельствования')),
                ('next_examination_date', models.DateField(blank=True, null=True, verbose_name='Дата следующего освидетельствования')),
                ('status', models.CharField(blank=True, max_length=100, verbose_name='Статус')),
                ('manufacturer', models.CharField(blank=True, max_length=30, null=True, verbose_name='Производитель')),
                ('wall_thickness', models.FloatField(blank=True, null=True, verbose_name='Толщина стенок')),
                ('filling_status', models.IntegerField(blank=True, null=True, verbose_name='Готов к наполнению')),
                ('update_passport_required', models.BooleanField(blank=True, null=True, verbose_name='Требуется обновление паспорта')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RemoveField(
            model_name='balloonhistory',
            name='balloon',
        ),
        migrations.RemoveField(
            model_name='balloonhistory',
            name='user',
        ),
        migrations.AddField(
            model_name='balloon',
            name='brutto',
            field=models.FloatField(blank=True, null=True, verbose_name='Вес наполненного баллона'),
        ),
        migrations.AddField(
            model_name='balloon',
            name='current_examination_date',
            field=models.DateField(blank=True, null=True, verbose_name='Дата освидетельствования'),
        ),
        migrations.AddField(
            model_name='balloon',
            name='netto',
            field=models.FloatField(blank=True, null=True, verbose_name='Вес пустого баллона'),
        ),
        migrations.AddField(
            model_name='balloon',
            name='next_examination_date',
            field=models.DateField(blank=True, null=True, verbose_name='Дата следующего освидетельствования'),
        ),
        migrations.AddField(
            model_name='balloon',
            name='status',
            field=models.CharField(blank=True, max_length=100, verbose_name='Статус'),
        ),
        migrations.AlterField(
            model_name='balloonamount',
            name='change_date',
            field=models.DateField(auto_now=True, null=True, verbose_name='Дата обновления'),
        ),
        migrations.AlterField(
            model_name='balloonamount',
            name='change_time',
            field=models.TimeField(auto_now=True, null=True, verbose_name='Время обновления'),
        ),
        migrations.AlterField(
            model_name='loadingbatchballoons',
            name='begin_date',
            field=models.DateField(auto_now_add=True, null=True, verbose_name='Дата начала приёмки'),
        ),
        migrations.AlterField(
            model_name='loadingbatchballoons',
            name='begin_time',
            field=models.TimeField(auto_now_add=True, null=True, verbose_name='Время начала приёмки'),
        ),
        migrations.AlterField(
            model_name='loadingbatchrailway',
            name='begin_date',
            field=models.DateField(auto_now_add=True, null=True, verbose_name='Дата начала приёмки'),
        ),
        migrations.AlterField(
            model_name='loadingbatchrailway',
            name='begin_time',
            field=models.TimeField(auto_now_add=True, null=True, verbose_name='Время начала приёмки'),
        ),
        migrations.AlterField(
            model_name='unloadingbatchballoons',
            name='begin_date',
            field=models.DateField(auto_now_add=True, null=True, verbose_name='Дата начала отгрузки'),
        ),
        migrations.AlterField(
            model_name='unloadingbatchballoons',
            name='begin_time',
            field=models.TimeField(auto_now_add=True, null=True, verbose_name='Время начала отгрузки'),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='balloon',
            trigger=pgtrigger.compiler.Trigger(name='insert_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "filling_station_balloonevent" ("brutto", "creation_date", "current_examination_date", "filling_status", "id", "manufacturer", "netto", "next_examination_date", "nfc_tag", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "serial_number", "size", "status", "update_passport_required", "wall_thickness") VALUES (NEW."brutto", NEW."creation_date", NEW."current_examination_date", NEW."filling_status", NEW."id", NEW."manufacturer", NEW."netto", NEW."next_examination_date", NEW."nfc_tag", _pgh_attach_context(), NOW(), \'insert\', NEW."id", NEW."serial_number", NEW."size", NEW."status", NEW."update_passport_required", NEW."wall_thickness"); RETURN NULL;', hash='6d87ed4bf0aa61b01768d3949611c7f436abe6b8', operation='INSERT', pgid='pgtrigger_insert_insert_703b2', table='filling_station_balloon', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='balloon',
            trigger=pgtrigger.compiler.Trigger(name='update_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "filling_station_balloonevent" ("brutto", "creation_date", "current_examination_date", "filling_status", "id", "manufacturer", "netto", "next_examination_date", "nfc_tag", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "serial_number", "size", "status", "update_passport_required", "wall_thickness") VALUES (NEW."brutto", NEW."creation_date", NEW."current_examination_date", NEW."filling_status", NEW."id", NEW."manufacturer", NEW."netto", NEW."next_examination_date", NEW."nfc_tag", _pgh_attach_context(), NOW(), \'update\', NEW."id", NEW."serial_number", NEW."size", NEW."status", NEW."update_passport_required", NEW."wall_thickness"); RETURN NULL;', hash='7087f5e6ce7ce265e248d14cd2b4187aca399826', operation='UPDATE', pgid='pgtrigger_update_update_08342', table='filling_station_balloon', when='AFTER')),
        ),
        migrations.AddField(
            model_name='balloonevent',
            name='pgh_context',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pghistory.context'),
        ),
        migrations.AddField(
            model_name='balloonevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='filling_station.balloon'),
        ),
        migrations.DeleteModel(
            name='BalloonHistory',
        ),
    ]
