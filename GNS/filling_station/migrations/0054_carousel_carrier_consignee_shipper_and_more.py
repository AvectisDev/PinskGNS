# Generated by Django 5.1.4 on 2025-04-05 15:54

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('filling_station', '0053_alter_railwaytank_registration_number_img'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Carousel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('carousel_number', models.IntegerField(default=1, verbose_name='Номер карусели наполнения')),
                ('is_empty', models.BooleanField(default=False, verbose_name='Принят запрос на наполнение баллона')),
                ('post_number', models.IntegerField(verbose_name='Номер поста наполнения')),
                ('empty_weight', models.FloatField(blank=True, null=True, verbose_name='Вес пустого баллона на посту')),
                ('full_weight', models.FloatField(blank=True, null=True, verbose_name='Вес полного баллона на посту')),
                ('nfc_tag', models.CharField(blank=True, max_length=30, null=True, verbose_name='Номер метки')),
                ('serial_number', models.CharField(blank=True, max_length=30, null=True, verbose_name='Серийный номер')),
                ('size', models.IntegerField(choices=[(5, 5), (12, 12), (27, 27), (50, 50)], default=50, verbose_name='Объём')),
                ('netto', models.FloatField(blank=True, null=True, verbose_name='Вес пустого баллона')),
                ('brutto', models.FloatField(blank=True, null=True, verbose_name='Вес наполненного баллона')),
                ('filling_status', models.BooleanField(default=False, verbose_name='Готов к наполнению')),
                ('change_date', models.DateField(auto_now=True, verbose_name='Дата изменений')),
                ('change_time', models.TimeField(auto_now=True, verbose_name='Время изменений')),
            ],
            options={
                'verbose_name': 'Карусель',
                'verbose_name_plural': 'Карусель',
                'ordering': ['-change_date', '-change_time'],
            },
        ),
        migrations.CreateModel(
            name='Carrier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Перевозчик')),
            ],
            options={
                'verbose_name': 'Перевозчик',
                'verbose_name_plural': 'Перевозчики',
            },
        ),
        migrations.CreateModel(
            name='Consignee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Грузополучатель')),
            ],
            options={
                'verbose_name': 'Грузополучатель',
                'verbose_name_plural': 'Грузополучатели',
            },
        ),
        migrations.CreateModel(
            name='Shipper',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Грузоотправитель')),
            ],
            options={
                'verbose_name': 'Грузоотправитель',
                'verbose_name_plural': 'Грузоотправители',
            },
        ),
        migrations.RemoveField(
            model_name='railwaybatch',
            name='export_ttn',
        ),
        migrations.RemoveField(
            model_name='railwaybatch',
            name='import_ttn',
        ),
        migrations.RemoveField(
            model_name='reader',
            name='user',
        ),
        migrations.AddField(
            model_name='railwaytank',
            name='netto_weight_ttn',
            field=models.FloatField(blank=True, null=True, verbose_name='Вес НЕТТО ж/д цистерны по накладной'),
        ),
        migrations.AddField(
            model_name='railwaytank',
            name='railway_ttn',
            field=models.CharField(blank=True, max_length=50, null=True, verbose_name='Номер ж/д накладной'),
        ),
        migrations.AlterField(
            model_name='balloon',
            name='user',
            field=models.ForeignKey(default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.AlterField(
            model_name='balloonevent',
            name='user',
            field=models.ForeignKey(db_constraint=False, default=1, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.AlterField(
            model_name='railwaybatch',
            name='begin_date',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Дата начала приёмки'),
        ),
        migrations.AlterField(
            model_name='railwaybatch',
            name='user',
            field=models.ForeignKey(default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.CreateModel(
            name='CarouselSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('read_only', models.BooleanField(default=True, verbose_name='Только чтение с постов наполнения')),
                ('use_weight_management', models.BooleanField(default=False, verbose_name='Использовать коррекцию веса')),
                ('use_common_correction', models.BooleanField(default=False, verbose_name='Использовать общее значение коррекции веса')),
                ('weight_correction_value', models.FloatField(default=0.0, verbose_name='Значение корректировки веса')),
                ('post_1_correction', models.FloatField(default=0.0, verbose_name='Корректор для 1 поста')),
                ('post_2_correction', models.FloatField(default=0.0, verbose_name='Корректор для 2 поста')),
                ('post_3_correction', models.FloatField(default=0.0, verbose_name='Корректор для 3 поста')),
                ('post_4_correction', models.FloatField(default=0.0, verbose_name='Корректор для 4 поста')),
                ('post_5_correction', models.FloatField(default=0.0, verbose_name='Корректор для 5 поста')),
                ('post_6_correction', models.FloatField(default=0.0, verbose_name='Корректор для 6 поста')),
                ('post_7_correction', models.FloatField(default=0.0, verbose_name='Корректор для 7 поста')),
                ('post_8_correction', models.FloatField(default=0.0, verbose_name='Корректор для 8 поста')),
                ('post_9_correction', models.FloatField(default=0.0, verbose_name='Корректор для 9 поста')),
                ('post_10_correction', models.FloatField(default=0.0, verbose_name='Корректор для 10 поста')),
                ('post_11_correction', models.FloatField(default=0.0, verbose_name='Корректор для 11 поста')),
                ('post_12_correction', models.FloatField(default=0.0, verbose_name='Корректор для 12 поста')),
                ('post_13_correction', models.FloatField(default=0.0, verbose_name='Корректор для 13 поста')),
                ('post_14_correction', models.FloatField(default=0.0, verbose_name='Корректор для 14 поста')),
                ('post_15_correction', models.FloatField(default=0.0, verbose_name='Корректор для 15 поста')),
                ('post_16_correction', models.FloatField(default=0.0, verbose_name='Корректор для 16 поста')),
                ('post_17_correction', models.FloatField(default=0.0, verbose_name='Корректор для 17 поста')),
                ('post_18_correction', models.FloatField(default=0.0, verbose_name='Корректор для 18 поста')),
                ('post_19_correction', models.FloatField(default=0.0, verbose_name='Корректор для 19 поста')),
                ('post_20_correction', models.FloatField(default=0.0, verbose_name='Корректор для 20 поста')),
                ('user', models.ForeignKey(default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Настройки карусели',
                'verbose_name_plural': 'Настройки карусели',
            },
        ),
        migrations.CreateModel(
            name='RailwayTtn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=100, verbose_name='Номер ТТН')),
                ('railway_ttn', models.CharField(blank=True, max_length=50, null=True, verbose_name='Номер ж/д накладной')),
                ('contract', models.CharField(blank=True, max_length=100, verbose_name='Номер договора')),
                ('total_gas_amount_by_scales', models.FloatField(blank=True, null=True, verbose_name='Количество газа по весам')),
                ('total_gas_amount_by_ttn', models.FloatField(blank=True, null=True, verbose_name='Количество газа по ТТН')),
                ('gas_type', models.CharField(choices=[('Не выбран', 'Не выбран'), ('СПБТ', 'СПБТ'), ('ПБА', 'ПБА')], default='Не выбран', max_length=10, verbose_name='Тип газа')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата формирования накладной')),
                ('carrier', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='railway_tank_carrier', to='filling_station.carrier', verbose_name='Перевозчик')),
                ('consignee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='railway_tank_consignee', to='filling_station.consignee', verbose_name='Грузополучатель')),
                ('railway_tank_list', models.ManyToManyField(blank=True, to='filling_station.railwaytank', verbose_name='Список жд цистерн')),
                ('shipper', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='railway_tank_shipper', to='filling_station.shipper', verbose_name='Грузоотправитель')),
            ],
            options={
                'verbose_name': 'Железнодорожная ТТН',
                'verbose_name_plural': 'Железнодорожные ТТН',
                'ordering': ['-date'],
            },
        ),
    ]
